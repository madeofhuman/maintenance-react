// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar component does not render the profile image icon when the user it not authenticated 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(Navbar)
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Navbar
        authenticated={false}
        logout={[Function]}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div
          className="header"
        >
          <span
            className="logo left"
          >
            <Link
              replace={false}
              to="/"
            >
              <a
                href="/"
                onClick={[Function]}
              >
                <Logo>
                  <img
                    alt="logo"
                    src={null}
                  />
                </Logo>
              </a>
            </Link>
          </span>
        </div>
      </Navbar>
    </Connect(Navbar)>
  </Router>
</BrowserRouter>
`;

exports[`Navbar component renders the profile image icon when the user it authenticated 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(Navbar)
      logout={[MockFunction]}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Navbar
        authenticated={true}
        logout={[Function]}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div
          className="header"
        >
          <span
            className="logo left"
          >
            <Link
              replace={false}
              to="/"
            >
              <a
                href="/"
                onClick={[Function]}
              >
                <Logo>
                  <img
                    alt="logo"
                    src={null}
                  />
                </Logo>
              </a>
            </Link>
          </span>
          <div
            className="profile-icon right"
          >
            <span
              className="text orange"
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/"
              >
                <a
                  href="/"
                  onClick={[Function]}
                >
                  Logout
                </a>
              </Link>
            </span>
            <ProfileIcon>
              <img
                alt="profile icon"
                src={null}
              />
            </ProfileIcon>
          </div>
        </div>
      </Navbar>
    </Connect(Navbar)>
  </Router>
</BrowserRouter>
`;
